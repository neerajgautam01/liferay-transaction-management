<?xml version="1.0"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	
	<context:annotation-config/>
	<tx:annotation-driven  transaction-manager="testDBTransactionManager"/>
	
	<aop:config>
		<aop:pointcut id="transactionOperation" expression="bean(com.liferay.sample.service.*Service)" />
		<aop:advisor advice-ref="transactionAdvice" pointcut-ref="transactionOperation" />
	</aop:config>
	<bean id="transactionAdvice" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="testDBTransactionManager" />
		<property name="transactionAttributeSource">
			<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource">
				<constructor-arg>
					<bean class="com.liferay.portal.spring.annotation.PortalTransactionAnnotationParser" />
				</constructor-arg>
			</bean>
		</property>
	</bean>
	
	<bean id="basePersistence" abstract="true">
		<property name="dataSource" ref="testDBDS" />
		<property name="sessionFactory" ref="testDBSessionFactory" />
	</bean>

	<bean id="testDBHibernateSessionFactory"
		class="com.liferay.portal.spring.hibernate.PortletHibernateConfiguration"
		lazy-init="true">
		<property name="dataSource" ref="testDBDS" />
	</bean>

	<bean id="testDBSessionFactory" class="com.liferay.portal.dao.orm.hibernate.SessionFactoryImpl"
		lazy-init="true">
		<property name="sessionFactoryImplementor" ref="testDBHibernateSessionFactory" />
	</bean>
	
	<bean id="testDBTransactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager" lazy-init="true">
	<!-- <bean id="testDBTransactionManager" class="org.springframework.transaction.jta.JtaTransactionManager" lazy-init="true"> -->
		<property name="dataSource" ref="testDBDS" />
		<property name="sessionFactory" ref="testDBHibernateSessionFactory" />
	</bean>
	
	<bean id="testDBDS"
		class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
		<property name="targetDataSource">
			<bean class="com.liferay.portal.dao.jdbc.util.DataSourceFactoryBean">
				<property name="propertyPrefix" value="jdbc.testDB." />
			</bean>
		</property>
	</bean>
	
	<!-- <bean id="jndiTestDataSource" class="com.liferay.portal.spring.jndi.JndiObjectFactoryBean">
       <property name="jndiName" value="jdbc/TestDB" />
    </bean>
	
	<bean id="testDBDS"
		class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
		<property name="targetDataSource" ref="jndiTestDataSource" />
	</bean> -->

</beans>